# Python | Data Science | Machine Learning

### Type of the problem: 
    - Whether regression, classification, clustering etc.
    - supervised, unsupervised, reinforcement etc.
    - 
    
1. Import required libraries
2. Load data -> pandas + DataFrame
    - study the data
    - whether adequate data is available
    - features and target(s)
    - correlation -- df.corr()
    - distribution -- df.hist()
    - density dist -- df.plot(kind='density', subplots=True, 
                            layout=(3,3), sharex=False)
    - scatter matrix of df
    - 
    
3. Imputation
    - strategy for treating missing values
        -- ffill, bfill, mean, map(key:value)
    - strategy for handling outliers
    	-- cause of outliers
        -- uni/bi variate outliers
        -- 2-3 times less or more than S.Dev
        -- 1.5-2 times IQR
        -- exclude points below 5th percentiles & above 95th 
        -- 
        
4. Exploratory Data Analysis
    - analyzing data sets to summarize their main characteristics, often with visual methods
    - heatmap of correlation
    - univariate analysis
    - bivariate analysis
    - multivariate analysis
    - 
5. Statistical Modeling + Hypothesis Testing
    - perform required statistical tests
    - 
    
6. Feature reduction
    - PCA, ICA
    - SelectPercentile
    - Combine features 
    - Collinear features
    - Ignore unwanted features
    - Data with low variance can't help in prediction
        [1,2,1,1,3,1,1,2,1,2,1,1,2,1,1]
    - Dimensionality reduction with t-SNE
    	- t-Distributed Stochastic Neighbor Embedding (t-SNE)
    -
    
7. Label encoding or One Hot encoding
    - note label encoded data
    - 
    
8. Train test split
    - random state
    - test size
    - cross validation cv
        - shuffle split
        - GridSearchCV
        - cross_val_score
        - 
        
9. Algorithms
    - choice of algorithms
    - advantages
    - disadvantages
    - calibration
    - 
    
10. Modeling
    - Train and test
    - Predict
    - Measure Accuracy
    	- mean_squared_error
	- r2_score
	- confusion_matrix
	- 
    - Cost function
    	- Gradient Descent
    - Parameter Tuning
    - Retrain
    - 

Also, note 

*  ROC curve
*  Precision = TP / (TP + FP)
*  Recall    = TP / (TP + FN)
*  Confusion matrix 
	    PY   PN
	AY  [TP, FP]
	AN  [FN, TN]
 
*  True +ve, False +ve

*  Standardization
   - StandardScaler
*  Normalization
 
*  Model fit and transform
 
*  Variable transformation
    - scale data
    - symmetric distribution
    - complex non-linear relationships into linear relationships
    - 
